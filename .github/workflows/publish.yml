name: Deploy

on:
  push:
    branches:
     - dev
     - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to AWS ECR
      id: ecr
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
          export ECR_REPOSITORY=${{ secrets.AWS_ECR_DEV }}
        else
          export ECR_REPOSITORY=${{ secrets.AWS_ECR_PROD }}
        fi
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=IMAGE::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Replace image in k8s configure
      run: |
        sed -i "s/ECR_IMAGE/${{ steps.ecr.outputs.IMAGE }}/" k8s/deployment.yaml

    - name: Deploy
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.AWS_CLUSTER }}
        kubectl apply -f ./k8s/deployment.yaml -f ./k8s/service.yaml
